# -*- coding: utf-8 -*-
"""ProblemStatement4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1H9WopBYO5OzrwOp4uXV59ev-Rv6dT3hS
"""

import os
import pandas as pd

os.chdir('/content/drive/MyDrive/Meta Files/train')

def random_files():
  local_files_location={} # local dictionary to this function, key: name of file, value: location of file
  local_files=[]  #local list to this function, names of all files are stored in this list
  i=0
  for r,d,f in os.walk(r'/content/drive/MyDrive/Meta Files/train'):
    for file in f:
      local_files_location[file]=os.path.join(r,file)
      local_files.append(file)
      i=i+1
    if (i==10000):
      break
  return local_files_location, local_files

def num_of_words_and_unique_words(fname):
  with open(fname,'r') as file:
    text = file.read()
    #cleaning
    text = text.lower()
    words = text.split()
    words = [word.strip('.,!;()[]') for word in words]
    words = [word.replace("'s", '') for word in words]

    #finding unique
    unique = []
    for word in words:
        if word not in unique:
            unique.append(word)
  return len(words), len(unique)

def count_uppercase_letters(fname):
  with open(fname) as countletter:
    count = 0
    text = countletter.read()
    for character in text:
      if character.isupper():
        count += 1
  return count

def count_lowercase_letters(fname):
  with open(fname) as countletter:
    count = 0
    text = countletter.read()
    for character in text:
      if character.islower():
        count += 1
  return count

def count_camelcase_words(fname):
  count = 0
  with open(fname) as file:
    data=file.read()
    for string in data:
      for i in range(1, len(string) - 1):
        if (string[i].isupper()):
          count += 1
          break
  return count

def count_character(fname):
  count=0
  with open(fname) as file:
    data=file.read()
    for string in data:
      count+=len(string)
  return count

def count_numeric_character(fname):
  count=0
  with open(fname) as file:
    data=file.read()
    for string in data:
      words=list(string.split())
      for word in words:
        if (word.isnumeric()):
          count+=1
  return count

def count_nonalphanumeric_character(fname):
  count1=0
  count2=0
  with open(fname) as file:
    data=file.read()
    for string in data:
      words=list(string.split())
      for word in words:
        if (word.isnumeric()):
          count1 += 1
        elif (word.isalpha()):
          count1 += 1
        else:
          count1 = count1
    for string in data:
      count2= count2 + len(string)
  return count2 - count1

def process_files():
  files_location, files = random_files()
  file_name = []
  total_words = []
  total_unique_words = []
  uppercase_words = []
  lowercase_words = []
  camelcase_words = []
  total_characters = []
  numeric_characters = []
  nonalphanumeric_characters = []
  for file in files:
    file_name.append(file)
    fname=files_location[file]
    t_w, t_u_w = num_of_words_and_unique_words(fname)
    total_words.append(t_w)
    total_unique_words.append(t_u_w)
    uppercase_words.append(count_uppercase_letters(fname))
    lowercase_words.append(count_lowercase_letters(fname))
    camelcase_words.append(count_camelcase_words(fname))
    total_characters.append(count_character(fname))
    numeric_characters.append(count_numeric_character(fname))
    nonalphanumeric_characters.append(count_nonalphanumeric_character(fname))
  dict = {'File_name': file_name, 'num_words': total_words, 'num_unique_words': total_unique_words, 'num_cap_words': uppercase_words, 'num_camel_case_words': camelcase_words, 'num_lower_case_letters': lowercase_words, 'num_characters': total_characters, 'num_num_characters': numeric_characters, 'num_non_alpha_numeric_chars': nonalphanumeric_characters}
  df = pd.DataFrame(dict)
  df.to_csv('output.csv')

process_files()